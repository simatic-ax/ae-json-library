
	
Simatic
AxSimatic

Conversion
Simatic.Ax
ArraysSimatic.Ax.Conversion 
IntegerSimatic.Ax.Conversion 
StringsSimatic.Ax.Conversion
Json
Simatic.Ax
AxUnit
AssertAxUnit
MockingAxUnití*è

Simatic.Ax.JsonDeserializer:ë

Simatic.Ax.Jsonbuffer"rp
0
Simatic.Ax.JsonREF_TO ARRAY [0..999] OF CHAR<:
)
Simatic.Ax.JsonARRAY [0..999] OF CHARÁ
CHARB≥

Simatic.Ax.Json	SetBufferí

Simatic.Ax.Json_buffer"rp
0
Simatic.Ax.JsonREF_TO ARRAY [0..999] OF CHAR<:
)
Simatic.Ax.JsonARRAY [0..999] OF CHARÁ
CHARBØ
%
Simatic.Ax.JsonKeyIsInIndexSpan&

Simatic.Ax.Jsonkey"

STRING*

Simatic.Ax.Json
startIndex"
INT(

Simatic.Ax.JsonendIndex"
INT"
BOOLBä
&
Simatic.Ax.JsonGetValueFromIndex*

Simatic.Ax.Json
startIndex"
INT(

Simatic.Ax.JsonendIndex"
INT"

STRINGB
%
Simatic.Ax.JsonGetBufferIndizes+

Simatic.Ax.JsonbufferStart"
INT)

Simatic.Ax.Json	bufferEnd"
INTBÒ
*
Simatic.Ax.JsonGetValue_WithKeyArray[

Simatic.Ax.JsonkeyArray":8
&
Simatic.Ax.JsonARRAY [*] OF STRING

STRING.
!
Simatic.Ax.JsonareaStartIndex"
INT,

Simatic.Ax.JsonareaEndIndex"
INT"
BOOLBy

Simatic.Ax.JsonTryParse&

Simatic.Ax.Jsonkey"

STRING(

Simatic.Ax.Jsonvalue"

STRING"
BOOLBÆ

Simatic.Ax.JsonTryParse[

Simatic.Ax.JsonkeyArray":8
&
Simatic.Ax.JsonARRAY [*] OF STRING

STRING(

Simatic.Ax.Jsonvalue"

STRING"
BOOLBw

Simatic.Ax.JsonTryParse&

Simatic.Ax.Jsonkey"

STRING&

Simatic.Ax.Jsonvalue"
SINT"
BOOLB¨

Simatic.Ax.JsonTryParse[

Simatic.Ax.JsonkeyArray":8
&
Simatic.Ax.JsonARRAY [*] OF STRING

STRING&

Simatic.Ax.Jsonvalue"
SINT"
BOOLBw

Simatic.Ax.JsonTryParse&

Simatic.Ax.Jsonkey"

STRING&

Simatic.Ax.Jsonvalue"
LINT"
BOOLB¨

Simatic.Ax.JsonTryParse[

Simatic.Ax.JsonkeyArray":8
&
Simatic.Ax.JsonARRAY [*] OF STRING

STRING&

Simatic.Ax.Jsonvalue"
LINT"
BOOLBw

Simatic.Ax.JsonTryParse&

Simatic.Ax.Jsonkey"

STRING&

Simatic.Ax.Jsonvalue"
DINT"
BOOLB¨

Simatic.Ax.JsonTryParse[

Simatic.Ax.JsonkeyArray":8
&
Simatic.Ax.JsonARRAY [*] OF STRING

STRING&

Simatic.Ax.Jsonvalue"
DINT"
BOOLBv

Simatic.Ax.JsonTryParse&

Simatic.Ax.Jsonkey"

STRING%

Simatic.Ax.Jsonvalue"
INT"
BOOLB´

Simatic.Ax.JsonTryParse[

Simatic.Ax.JsonkeyArray":8
&
Simatic.Ax.JsonARRAY [*] OF STRING

STRING%

Simatic.Ax.Jsonvalue"
INT"
BOOLBx

Simatic.Ax.JsonTryParse&

Simatic.Ax.Jsonkey"

STRING'

Simatic.Ax.Jsonvalue"	
USINT"
BOOLB≠

Simatic.Ax.JsonTryParse[

Simatic.Ax.JsonkeyArray":8
&
Simatic.Ax.JsonARRAY [*] OF STRING

STRING'

Simatic.Ax.Jsonvalue"	
USINT"
BOOLBw

Simatic.Ax.JsonTryParse&

Simatic.Ax.Jsonkey"

STRING&

Simatic.Ax.Jsonvalue"
UINT"
BOOLB¨

Simatic.Ax.JsonTryParse[

Simatic.Ax.JsonkeyArray":8
&
Simatic.Ax.JsonARRAY [*] OF STRING

STRING&

Simatic.Ax.Jsonvalue"
UINT"
BOOLBx

Simatic.Ax.JsonTryParse&

Simatic.Ax.Jsonkey"

STRING'

Simatic.Ax.Jsonvalue"	
UDINT"
BOOLB≠

Simatic.Ax.JsonTryParse[

Simatic.Ax.JsonkeyArray":8
&
Simatic.Ax.JsonARRAY [*] OF STRING

STRING'

Simatic.Ax.Jsonvalue"	
UDINT"
BOOLBx

Simatic.Ax.JsonTryParse&

Simatic.Ax.Jsonkey"

STRING'

Simatic.Ax.Jsonvalue"	
ULINT"
BOOLB≠

Simatic.Ax.JsonTryParse[

Simatic.Ax.JsonkeyArray":8
&
Simatic.Ax.JsonARRAY [*] OF STRING

STRING'

Simatic.Ax.Jsonvalue"	
ULINT"
BOOL*Ì
+
$GLOBALUsingDeserializer"
TestFixture:>

$GLOBALdeserializer"!

Simatic.Ax.JsonDeserializer:K

$GLOBALbuffer"42
!
$GLOBALARRAY [0..999] OF CHARÁ
CHAR:%

$GLOBAL
JSON_Entry"

STRING:

$GLOBALkey"

STRING:

$GLOBALlen"
DINT:!

$GLOBALkeyFound"
BOOLB.
,
$GLOBALGetValue_BASIC_DATA_TYPES"
TestB#
!
$GLOBALGetValue_ARRAY"
TestB$
"
$GLOBALGetValue_Nested"
TestB.
,
$GLOBALGetValue_Nested_in_Nested"
Test`^
'
Simatic.Ax.ConversionConversionMode
WORD
NONE
0

FORCE_SIGN
1"
0¬ø
 
Simatic.Ax.JsonJsonValueKind
INT
_Array
2
_False
6
_Null
7
_Number
4
_Object
1
_String
3
_True
5

_Undefined
0"
0˛2˚
'
Simatic.Ax.JsonIJsonElementMuteable&

Simatic.Ax.JsonHasNext"
BOOLG

Simatic.Ax.JsonGetNext")
'
Simatic.Ax.JsonIJsonElementMuteable_

Simatic.Ax.Json
AddElement>

Simatic.Ax.Jsonelem"!

Simatic.Ax.JsonIJsonElementı2Ú

Simatic.Ax.JsonIJsonElement)

Simatic.Ax.JsonToString"

STRING£

Simatic.Ax.Json	Serializey

Simatic.Ax.Jsondoc"][
6
Simatic.Ax.Json#REF_TO Simatic.Ax.Json.JsonDocument!

Simatic.Ax.JsonJsonDocument"
BOOLá*Ñ

Simatic.Ax.JsonJsonDocument:Y

Simatic.Ax.Jsonbuffer"<:
)
Simatic.Ax.JsonARRAY [0..999] OF CHARÁ
CHAR:O
"
Simatic.Ax.Json_firstElement")
'
Simatic.Ax.JsonIJsonElementMuteable:N
!
Simatic.Ax.Json_lastElement")
'
Simatic.Ax.JsonIJsonElementMuteable:F
!
Simatic.Ax.Json_rootElement"!

Simatic.Ax.JsonIJsonElement:(

Simatic.Ax.Json_lentgh"
DINT:/
#
Simatic.Ax.Json_bufLowerBound"
DINT:*

Simatic.Ax.Json	_bufIndex"
DINTB)

Simatic.Ax.JsonToString"

STRINGB|

Simatic.Ax.Json	SerializeR

Simatic.Ax.Jsonbuf"64
$
Simatic.Ax.JsonARRAY [*] OF CHAR
CHAR"
BOOLBJ

Simatic.Ax.JsonAddChar"

Simatic.Ax.Jsonc"
CHAR"
BOOLBN

Simatic.Ax.Json	AddString$

Simatic.Ax.Jsons"

STRING"
BOOLB(

Simatic.Ax.Json	GetLength"
DINTBF
!
Simatic.Ax.JsonGetRootElement"!

Simatic.Ax.JsonIJsonElementB_

Simatic.Ax.Json
AddElement>

Simatic.Ax.Jsonelem"!

Simatic.Ax.JsonIJsonElementﬁ*€
&
Simatic.Ax.JsonAbstractJsonElement 2'
Simatic.Ax.JsonIJsonElementMuteable2
Simatic.Ax.JsonIJsonElement:2

Simatic.Ax.JsonKey"

STRING*

NoKeySet:G

Simatic.Ax.Json_next")
'
Simatic.Ax.JsonIJsonElementMuteableBc
#
Simatic.Ax.JsonToStringHelper0
 
Simatic.Ax.JsonvalueAsString"

STRING"

STRINGB€
"
Simatic.Ax.JsonSerializeHelpery

Simatic.Ax.Jsondoc"][
6
Simatic.Ax.Json#REF_TO Simatic.Ax.Json.JsonDocument!

Simatic.Ax.JsonJsonDocument0
 
Simatic.Ax.JsonvalueAsString"

STRING"
DINTB&

Simatic.Ax.JsonHasNext"
BOOLBG

Simatic.Ax.JsonGetNext")
'
Simatic.Ax.JsonIJsonElementMuteableB_

Simatic.Ax.Json
AddElement>

Simatic.Ax.Jsonelem"!

Simatic.Ax.JsonIJsonElementB+

Simatic.Ax.JsonToString"

STRINGB•

Simatic.Ax.Json	Serializey

Simatic.Ax.Jsondoc"][
6
Simatic.Ax.Json#REF_TO Simatic.Ax.Json.JsonDocument!

Simatic.Ax.JsonJsonDocument"
BOOLä*á
!
Simatic.Ax.JsonBaseJsonNumber*&
Simatic.Ax.JsonAbstractJsonElementBe
#
Simatic.Ax.JsonToStringHelper0
 
Simatic.Ax.JsonvalueAsString"

STRING"

STRINGB+

Simatic.Ax.JsonToString"

STRINGB•

Simatic.Ax.Json	Serializey

Simatic.Ax.Jsondoc"][
6
Simatic.Ax.Json#REF_TO Simatic.Ax.Json.JsonDocument!

Simatic.Ax.JsonJsonDocument"
BOOL¡*æ

Simatic.Ax.JsonJsonBoolean*!
Simatic.Ax.JsonBaseJsonNumber:$

Simatic.Ax.JsonValue"
BOOLB+

Simatic.Ax.JsonToString"

STRINGB•

Simatic.Ax.Json	Serializey

Simatic.Ax.Jsondoc"][
6
Simatic.Ax.Json#REF_TO Simatic.Ax.Json.JsonDocument!

Simatic.Ax.JsonJsonDocument"
BOOLñ*ì

Simatic.Ax.JsonJsonDInt*!
Simatic.Ax.JsonBaseJsonNumber:$

Simatic.Ax.JsonValue"
DINTB+

Simatic.Ax.JsonToString"

STRINGî*ë

Simatic.Ax.JsonJsonInt*!
Simatic.Ax.JsonBaseJsonNumber:#

Simatic.Ax.JsonValue"
INTB+

Simatic.Ax.JsonToString"

STRINGñ*ì

Simatic.Ax.JsonJsonLInt*!
Simatic.Ax.JsonBaseJsonNumber:$

Simatic.Ax.JsonValue"
LINTB+

Simatic.Ax.JsonToString"

STRINGò*ï

Simatic.Ax.Json	JsonUSInt*!
Simatic.Ax.JsonBaseJsonNumber:%

Simatic.Ax.JsonValue"	
USINTB+

Simatic.Ax.JsonToString"

STRINGñ*ì

Simatic.Ax.JsonJsonSInt*!
Simatic.Ax.JsonBaseJsonNumber:$

Simatic.Ax.JsonValue"
SINTB+

Simatic.Ax.JsonToString"

STRING‚*ﬂ
%
Simatic.Ax.JsonDeserializedObject:,
!
Simatic.Ax.JsonKEY_STARTINDEX"
INT:*

Simatic.Ax.JsonKEY_ENDINDEX"
INT:.
#
Simatic.Ax.JsonVALUE_STARTINDEX"
INT:,
!
Simatic.Ax.JsonVALUE_ENDINDEX"
INT£*†

Simatic.Ax.Json
JsonObject*&
Simatic.Ax.JsonAbstractJsonElement:N
!
Simatic.Ax.Json_lastElement")
'
Simatic.Ax.JsonIJsonElementMuteable:O
"
Simatic.Ax.Json_firstElement")
'
Simatic.Ax.JsonIJsonElementMuteableB+

Simatic.Ax.JsonToString"

STRINGB•

Simatic.Ax.Json	Serializey

Simatic.Ax.Jsondoc"][
6
Simatic.Ax.Json#REF_TO Simatic.Ax.Json.JsonDocument!

Simatic.Ax.JsonJsonDocument"
BOOLBa

Simatic.Ax.Json
AddElement>

Simatic.Ax.Jsonelem"!

Simatic.Ax.JsonIJsonElement«*ƒ

Simatic.Ax.Json
JsonString*&
Simatic.Ax.JsonAbstractJsonElement:&

Simatic.Ax.JsonValue"

STRINGB+

Simatic.Ax.JsonToString"

STRINGB•

Simatic.Ax.Json	Serializey

Simatic.Ax.Jsondoc"][
6
Simatic.Ax.Json#REF_TO Simatic.Ax.Json.JsonDocument!

Simatic.Ax.JsonJsonDocument"
BOOL∏*µ
)
$GLOBALUsingSerializer"
TestFixture:3

$GLOBALdoc"!

Simatic.Ax.JsonJsonDocument:H

$GLOBALcmpBuff"20
 
$GLOBALARRAY [0..20] OF CHAR
CHAR:

$GLOBALstr"

STRING:

$GLOBALs"

STRING:b

$GLOBAL	myBoolean" 

Simatic.Ax.JsonJsonBoolean*("&

Value
1

Key
	myBoolean:Y

$GLOBALmyInt"

Simatic.Ax.JsonJsonInt*'"%

Value
1234

Key	
myInt:`

$GLOBALmyDint"

Simatic.Ax.JsonJsonDInt*,"*

Value

12345678

Key

myDint:o

$GLOBALmyString"

Simatic.Ax.Json
JsonString*7"5

Value
this is my string

Key

myString:O

$GLOBALmyObject"

Simatic.Ax.Json
JsonObject*"

Key

myObjectB&
$
$GLOBALSerialize_BOOLEAN"
TestB"
 
$GLOBALSerialize_INT"
TestB#
!
$GLOBALSerialize_DINT"
TestB%
#
$GLOBALSerialize_STRING"
TestB'
%
$GLOBALSerialize_INT_DINT"
TestB+
)
$GLOBALSerialize_NestedObject"
Test2

AxUnit.MockingIPayload*∫
)
Simatic.Ax.ConversionAnyIntToString,

Simatic.Ax.Conversionvalue"
LINTS

Simatic.Ax.Conversionmode")
'
Simatic.Ax.ConversionConversionMode*
0"

STRING*∫
(
Simatic.Ax.ConversionULintToString-

Simatic.Ax.Conversionvalue"	
ULINTS

Simatic.Ax.Conversionmode")
'
Simatic.Ax.ConversionConversionMode*
0"

STRING*ê
(
Simatic.Ax.Conversion.ArraysToStringl
#
Simatic.Ax.Conversion.Arraysarr"CA
1
Simatic.Ax.Conversion.ArraysARRAY [*] OF CHAR
CHAR5
(
Simatic.Ax.Conversion.ArraysstartIdx"
INT3
&
Simatic.Ax.Conversion.ArraysendIdx"
INT"

STRING*§
(
Simatic.Ax.Conversion.ArraysToStringl
#
Simatic.Ax.Conversion.Arraysarr"CA
1
Simatic.Ax.Conversion.ArraysARRAY [*] OF CHAR
CHAR"

STRING*]
$
Simatic.Ax.ConversionCountDigits,

Simatic.Ax.Conversionvalue"
LINT"
INT*^
$
Simatic.Ax.ConversionCountDigits-

Simatic.Ax.Conversionvalue"	
ULINT"
INT*Ç
7
Simatic.Ax.ConversionCreateStringWithBlanksOfLength,

Simatic.Ax.Conversionstr"

STRING)

Simatic.Ax.Conversionlen"
INTb
$
Simatic.Ax.Conversion_tempString"0".
"
Simatic.Ax.Conversion	STRING[1]CHAR*
48"

STRING*¯
)
Simatic.Ax.Conversion.IntegerToString4
&
Simatic.Ax.Conversion.Integervalue"
SINT[
%
Simatic.Ax.Conversion.Integermode")
'
Simatic.Ax.ConversionConversionMode*
0"8"6
*
Simatic.Ax.Conversion.Integer	STRING[4]CHAR*˘
)
Simatic.Ax.Conversion.IntegerToString5
&
Simatic.Ax.Conversion.Integervalue"	
USINT[
%
Simatic.Ax.Conversion.Integermode")
'
Simatic.Ax.ConversionConversionMode*
0"8"6
*
Simatic.Ax.Conversion.Integer	STRING[4]CHAR*˜
)
Simatic.Ax.Conversion.IntegerToString3
&
Simatic.Ax.Conversion.Integervalue"
INT[
%
Simatic.Ax.Conversion.Integermode")
'
Simatic.Ax.ConversionConversionMode*
0"8"6
*
Simatic.Ax.Conversion.Integer	STRING[6]CHAR*¯
)
Simatic.Ax.Conversion.IntegerToString4
&
Simatic.Ax.Conversion.Integervalue"
UINT[
%
Simatic.Ax.Conversion.Integermode")
'
Simatic.Ax.ConversionConversionMode*
0"8"6
*
Simatic.Ax.Conversion.Integer	STRING[6]CHAR*˘
)
Simatic.Ax.Conversion.IntegerToString4
&
Simatic.Ax.Conversion.Integervalue"
DINT[
%
Simatic.Ax.Conversion.Integermode")
'
Simatic.Ax.ConversionConversionMode*
0"9"7
+
Simatic.Ax.Conversion.Integer
STRING[11]CHAR*˙
)
Simatic.Ax.Conversion.IntegerToString5
&
Simatic.Ax.Conversion.Integervalue"	
UDINT[
%
Simatic.Ax.Conversion.Integermode")
'
Simatic.Ax.ConversionConversionMode*
0"9"7
+
Simatic.Ax.Conversion.Integer
STRING[11]CHAR*˘
)
Simatic.Ax.Conversion.IntegerToString4
&
Simatic.Ax.Conversion.Integervalue"
LINT[
%
Simatic.Ax.Conversion.Integermode")
'
Simatic.Ax.ConversionConversionMode*
0"9"7
+
Simatic.Ax.Conversion.Integer
STRING[20]CHAR*˙
)
Simatic.Ax.Conversion.IntegerToString5
&
Simatic.Ax.Conversion.Integervalue"	
ULINT[
%
Simatic.Ax.Conversion.Integermode")
'
Simatic.Ax.ConversionConversionMode*
0"9"7
+
Simatic.Ax.Conversion.Integer
STRING[21]CHAR*è
'
Simatic.Ax.ConversionStringToAnyInt,

Simatic.Ax.Conversionstr"

STRING,

Simatic.Ax.Conversionvalue"
LINT"
BOOL*ë
(
Simatic.Ax.ConversionStringToULint,

Simatic.Ax.Conversionstr"

STRING-

Simatic.Ax.Conversionvalue"	
ULINT"
BOOL*⁄
(
Simatic.Ax.Conversion.StringsToArray4
$
Simatic.Ax.Conversion.Stringsstr"

STRINGn
$
Simatic.Ax.Conversion.Stringsarr"DB
2
Simatic.Ax.Conversion.StringsARRAY [*] OF CHAR
CHAR"
DINT*û
&
Simatic.Ax.Conversion.StringsToInt4
$
Simatic.Ax.Conversion.Stringsstr"

STRING4
&
Simatic.Ax.Conversion.Stringsvalue"
SINT"
BOOL*ù
&
Simatic.Ax.Conversion.StringsToInt4
$
Simatic.Ax.Conversion.Stringsstr"

STRING3
&
Simatic.Ax.Conversion.Stringsvalue"
INT"
BOOL*û
&
Simatic.Ax.Conversion.StringsToInt4
$
Simatic.Ax.Conversion.Stringsstr"

STRING4
&
Simatic.Ax.Conversion.Stringsvalue"
DINT"
BOOL*û
&
Simatic.Ax.Conversion.StringsToInt4
$
Simatic.Ax.Conversion.Stringsstr"

STRING4
&
Simatic.Ax.Conversion.Stringsvalue"
LINT"
BOOL*ü
&
Simatic.Ax.Conversion.StringsToInt4
$
Simatic.Ax.Conversion.Stringsstr"

STRING5
&
Simatic.Ax.Conversion.Stringsvalue"	
USINT"
BOOL*û
&
Simatic.Ax.Conversion.StringsToInt4
$
Simatic.Ax.Conversion.Stringsstr"

STRING4
&
Simatic.Ax.Conversion.Stringsvalue"
UINT"
BOOL*ü
&
Simatic.Ax.Conversion.StringsToInt4
$
Simatic.Ax.Conversion.Stringsstr"

STRING5
&
Simatic.Ax.Conversion.Stringsvalue"	
UDINT"
BOOL*ü
&
Simatic.Ax.Conversion.StringsToInt4
$
Simatic.Ax.Conversion.Stringsstr"

STRING5
&
Simatic.Ax.Conversion.Stringsvalue"	
ULINT"
BOOL*f

AxUnit.AssertEqual&

AxUnit.Assertexpected"
INT$

AxUnit.Assertactual"
INT*h

AxUnit.AssertEqual'

AxUnit.Assertexpected"
SINT%

AxUnit.Assertactual"
SINT*h

AxUnit.AssertEqual'

AxUnit.Assertexpected"
DINT%

AxUnit.Assertactual"
DINT*h

AxUnit.AssertEqual'

AxUnit.Assertexpected"
LINT%

AxUnit.Assertactual"
LINT*j

AxUnit.AssertEqual(

AxUnit.Assertexpected"	
USINT&

AxUnit.Assertactual"	
USINT*h

AxUnit.AssertEqual'

AxUnit.Assertexpected"
UINT%

AxUnit.Assertactual"
UINT*j

AxUnit.AssertEqual(

AxUnit.Assertexpected"	
UDINT&

AxUnit.Assertactual"	
UDINT*j

AxUnit.AssertEqual(

AxUnit.Assertexpected"	
ULINT&

AxUnit.Assertactual"	
ULINT*h

AxUnit.AssertEqual'

AxUnit.Assertexpected"
REAL%

AxUnit.Assertactual"
REAL*j

AxUnit.AssertEqual(

AxUnit.Assertexpected"	
LREAL&

AxUnit.Assertactual"	
LREAL*h

AxUnit.AssertEqual'

AxUnit.Assertexpected"
BOOL%

AxUnit.Assertactual"
BOOL*h

AxUnit.AssertEqual'

AxUnit.Assertexpected"
BYTE%

AxUnit.Assertactual"
BYTE*h

AxUnit.AssertEqual'

AxUnit.Assertexpected"
WORD%

AxUnit.Assertactual"
WORD*j

AxUnit.AssertEqual(

AxUnit.Assertexpected"	
DWORD&

AxUnit.Assertactual"	
DWORD*j

AxUnit.AssertEqual(

AxUnit.Assertexpected"	
LWORD&

AxUnit.Assertactual"	
LWORD*l

AxUnit.AssertEqual)

AxUnit.Assertexpected"

STRING'

AxUnit.Assertactual"

STRING*n

AxUnit.AssertEqual*

AxUnit.Assertexpected"
	WSTRING(

AxUnit.Assertactual"
	WSTRING*i

AxUnit.AssertNotEqual&

AxUnit.Assertexpected"
INT$

AxUnit.Assertactual"
INT*k

AxUnit.AssertNotEqual'

AxUnit.Assertexpected"
SINT%

AxUnit.Assertactual"
SINT*k

AxUnit.AssertNotEqual'

AxUnit.Assertexpected"
DINT%

AxUnit.Assertactual"
DINT*k

AxUnit.AssertNotEqual'

AxUnit.Assertexpected"
LINT%

AxUnit.Assertactual"
LINT*m

AxUnit.AssertNotEqual(

AxUnit.Assertexpected"	
USINT&

AxUnit.Assertactual"	
USINT*k

AxUnit.AssertNotEqual'

AxUnit.Assertexpected"
UINT%

AxUnit.Assertactual"
UINT*m

AxUnit.AssertNotEqual(

AxUnit.Assertexpected"	
UDINT&

AxUnit.Assertactual"	
UDINT*m

AxUnit.AssertNotEqual(

AxUnit.Assertexpected"	
ULINT&

AxUnit.Assertactual"	
ULINT*k

AxUnit.AssertNotEqual'

AxUnit.Assertexpected"
REAL%

AxUnit.Assertactual"
REAL*m

AxUnit.AssertNotEqual(

AxUnit.Assertexpected"	
LREAL&

AxUnit.Assertactual"	
LREAL*k

AxUnit.AssertNotEqual'

AxUnit.Assertexpected"
BOOL%

AxUnit.Assertactual"
BOOL*k

AxUnit.AssertNotEqual'

AxUnit.Assertexpected"
BYTE%

AxUnit.Assertactual"
BYTE*k

AxUnit.AssertNotEqual'

AxUnit.Assertexpected"
WORD%

AxUnit.Assertactual"
WORD*m

AxUnit.AssertNotEqual(

AxUnit.Assertexpected"	
DWORD&

AxUnit.Assertactual"	
DWORD*m

AxUnit.AssertNotEqual(

AxUnit.Assertexpected"	
LWORD&

AxUnit.Assertactual"	
LWORD*o

AxUnit.AssertNotEqual)

AxUnit.Assertexpected"

STRING'

AxUnit.Assertactual"

STRING*q

AxUnit.AssertNotEqual*

AxUnit.Assertexpected"
	WSTRING(

AxUnit.Assertactual"
	WSTRING*g

AxUnit.AssertGreaterThan"

AxUnit.Assertleft"
INT#

AxUnit.Assertright"
INT*i

AxUnit.AssertGreaterThan#

AxUnit.Assertleft"
SINT$

AxUnit.Assertright"
SINT*i

AxUnit.AssertGreaterThan#

AxUnit.Assertleft"
DINT$

AxUnit.Assertright"
DINT*i

AxUnit.AssertGreaterThan#

AxUnit.Assertleft"
LINT$

AxUnit.Assertright"
LINT*k

AxUnit.AssertGreaterThan$

AxUnit.Assertleft"	
USINT%

AxUnit.Assertright"	
USINT*i

AxUnit.AssertGreaterThan#

AxUnit.Assertleft"
UINT$

AxUnit.Assertright"
UINT*k

AxUnit.AssertGreaterThan$

AxUnit.Assertleft"	
UDINT%

AxUnit.Assertright"	
UDINT*k

AxUnit.AssertGreaterThan$

AxUnit.Assertleft"	
ULINT%

AxUnit.Assertright"	
ULINT*i

AxUnit.AssertGreaterThan#

AxUnit.Assertleft"
REAL$

AxUnit.Assertright"
REAL*k

AxUnit.AssertGreaterThan$

AxUnit.Assertleft"	
LREAL%

AxUnit.Assertright"	
LREAL*d

AxUnit.AssertLessThan"

AxUnit.Assertleft"
INT#

AxUnit.Assertright"
INT*f

AxUnit.AssertLessThan#

AxUnit.Assertleft"
SINT$

AxUnit.Assertright"
SINT*f

AxUnit.AssertLessThan#

AxUnit.Assertleft"
DINT$

AxUnit.Assertright"
DINT*f

AxUnit.AssertLessThan#

AxUnit.Assertleft"
LINT$

AxUnit.Assertright"
LINT*h

AxUnit.AssertLessThan$

AxUnit.Assertleft"	
USINT%

AxUnit.Assertright"	
USINT*f

AxUnit.AssertLessThan#

AxUnit.Assertleft"
UINT$

AxUnit.Assertright"
UINT*h

AxUnit.AssertLessThan$

AxUnit.Assertleft"	
UDINT%

AxUnit.Assertright"	
UDINT*h

AxUnit.AssertLessThan$

AxUnit.Assertleft"	
ULINT%

AxUnit.Assertright"	
ULINT*f

AxUnit.AssertLessThan#

AxUnit.Assertleft"
REAL$

AxUnit.Assertright"
REAL*h

AxUnit.AssertLessThan$

AxUnit.Assertleft"	
LREAL%

AxUnit.Assertright"	
LREAL*À

AxUnitWriteToArray

AxUnitoffset"
UINTB

AxUnitvalue"-+

AxUnitARRAY [*] OF BYTE
BYTEC

AxUnitbuffer"-+

AxUnitARRAY [*] OF BYTE
BYTE"
UINT*¶

AxUnitWriteToArray

AxUnitoffset"
UINT

AxUnitvalue"
BOOLC

AxUnitbuffer"-+

AxUnitARRAY [*] OF BYTE
BYTE"
UINT*¶

AxUnitWriteToArray

AxUnitoffset"
UINT

AxUnitvalue"
WORDC

AxUnitbuffer"-+

AxUnitARRAY [*] OF BYTE
BYTE"
UINT*ß

AxUnitWriteToArray

AxUnitoffset"
UINT

AxUnitvalue"	
DWORDC

AxUnitbuffer"-+

AxUnitARRAY [*] OF BYTE
BYTE"
UINT*ß

AxUnitWriteToArray

AxUnitoffset"
UINT

AxUnitvalue"	
LWORDC

AxUnitbuffer"-+

AxUnitARRAY [*] OF BYTE
BYTE"
UINT*¶

AxUnitWriteToArray

AxUnitoffset"
UINT

AxUnitvalue"
BYTEC

AxUnitbuffer"-+

AxUnitARRAY [*] OF BYTE
BYTE"
UINT*¶

AxUnitWriteToArray

AxUnitoffset"
UINT

AxUnitvalue"
SINTC

AxUnitbuffer"-+

AxUnitARRAY [*] OF BYTE
BYTE"
UINT*•

AxUnitWriteToArray

AxUnitoffset"
UINT

AxUnitvalue"
INTC

AxUnitbuffer"-+

AxUnitARRAY [*] OF BYTE
BYTE"
UINT*¶

AxUnitWriteToArray

AxUnitoffset"
UINT

AxUnitvalue"
DINTC

AxUnitbuffer"-+

AxUnitARRAY [*] OF BYTE
BYTE"
UINT*¶

AxUnitWriteToArray

AxUnitoffset"
UINT

AxUnitvalue"
LINTC

AxUnitbuffer"-+

AxUnitARRAY [*] OF BYTE
BYTE"
UINT*ß

AxUnitWriteToArray

AxUnitoffset"
UINT

AxUnitvalue"	
USINTC

AxUnitbuffer"-+

AxUnitARRAY [*] OF BYTE
BYTE"
UINT*¶

AxUnitWriteToArray

AxUnitoffset"
UINT

AxUnitvalue"
UINTC

AxUnitbuffer"-+

AxUnitARRAY [*] OF BYTE
BYTE"
UINT*ß

AxUnitWriteToArray

AxUnitoffset"
UINT

AxUnitvalue"	
UDINTC

AxUnitbuffer"-+

AxUnitARRAY [*] OF BYTE
BYTE"
UINT*ß

AxUnitWriteToArray

AxUnitoffset"
UINT

AxUnitvalue"	
ULINTC

AxUnitbuffer"-+

AxUnitARRAY [*] OF BYTE
BYTE"
UINT*¶

AxUnitWriteToArray

AxUnitoffset"
UINT

AxUnitvalue"
REALC

AxUnitbuffer"-+

AxUnitARRAY [*] OF BYTE
BYTE"
UINT*ß

AxUnitWriteToArray

AxUnitoffset"
UINT

AxUnitvalue"	
LREALC

AxUnitbuffer"-+

AxUnitARRAY [*] OF BYTE
BYTE"
UINT*f

AxUnitToByteArray

AxUnitvalue"
BOOL".,

AxUnitARRAY [0..0] OF BYTE 
BYTE*f

AxUnitToByteArray

AxUnitvalue"
BYTE".,

AxUnitARRAY [0..0] OF BYTE 
BYTE*f

AxUnitToByteArray

AxUnitvalue"
SINT".,

AxUnitARRAY [0..0] OF BYTE 
BYTE*g

AxUnitToByteArray

AxUnitvalue"	
USINT".,

AxUnitARRAY [0..0] OF BYTE 
BYTE*h

AxUnitToByteArray

AxUnitvalue"
WORD"0.

AxUnitARRAY [0..1] OF BYTE
BYTE*i

AxUnitToByteArray

AxUnitvalue"	
DWORD"0.

AxUnitARRAY [0..3] OF BYTE
BYTE*i

AxUnitToByteArray

AxUnitvalue"	
UDINT"0.

AxUnitARRAY [0..3] OF BYTE
BYTE*g

AxUnitToByteArray

AxUnitvalue"
INT"0.

AxUnitARRAY [0..1] OF BYTE
BYTE*h

AxUnitToByteArray

AxUnitvalue"
UINT"0.

AxUnitARRAY [0..1] OF BYTE
BYTE*h

AxUnitToByteArray

AxUnitvalue"
DINT"0.

AxUnitARRAY [0..3] OF BYTE
BYTE*h

AxUnitToByteArray

AxUnitvalue"
LINT"0.

AxUnitARRAY [0..7] OF BYTE
BYTE*h

AxUnitToByteArray

AxUnitvalue"
REAL"0.

AxUnitARRAY [0..3] OF BYTE
BYTE*i

AxUnitToByteArray

AxUnitvalue"	
LWORD"0.

AxUnitARRAY [0..7] OF BYTE
BYTE*i

AxUnitToByteArray

AxUnitvalue"	
ULINT"0.

AxUnitARRAY [0..7] OF BYTE
BYTE*i

AxUnitToByteArray

AxUnitvalue"	
LREAL"0.

AxUnitARRAY [0..7] OF BYTE
BYTE*à
!
AxUnitToByteArray64"
inline

AxUnitvalue"	
LWORDC

AxUnitarr"0.

AxUnitARRAY [0..7] OF BYTE
BYTE*à
!
AxUnitToByteArray32"
inline

AxUnitvalue"	
DWORDC

AxUnitarr"0.

AxUnitARRAY [0..3] OF BYTE
BYTE*á
!
AxUnitToByteArray16"
inline

AxUnitvalue"
WORDC

AxUnitarr"0.

AxUnitARRAY [0..1] OF BYTE
BYTE*Ñ
 
AxUnitToByteArray8"
inline

AxUnitvalue"
BYTEA

AxUnitarr".,

AxUnitARRAY [0..0] OF BYTE 
BYTE*à

AxUnit.MockingMock7
'
AxUnit.MockingmockeeFn"
	mandatory"

STRING5
%
AxUnit.MockingmockFn"
	mandatory"

STRING*≈

AxUnit.MockingMock7
'
AxUnit.MockingmockeeFn"
	mandatory"

STRING5
%
AxUnit.MockingmockFn"
	mandatory"

STRING;

AxUnit.Mockingpayload"

AxUnit.MockingIPayload*<

AxUnit.Mocking
GetPayload"

AxUnit.MockingIPayload2

$GLOBAL	MyProgram:®

$GLOBALMyConfiguration*+

$GLOBALP1Main
$GLOBAL	MyProgram2]

$GLOBALMainDefaultIntervalTask3"1

	tInterval

1000000000

	iPriority
1